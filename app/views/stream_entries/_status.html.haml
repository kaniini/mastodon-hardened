:ruby
  pinned          ||= false
  include_threads ||= false
  is_predecessor  ||= false
  is_successor    ||= false
  direct_reply_id ||= false
  parent_id       ||= false
  is_direct_parent = direct_reply_id == status.id
  is_direct_child  = parent_id == status.in_reply_to_id
  centered ||= include_threads && !is_predecessor && !is_successor
  h_class       = microformats_h_class(status, is_predecessor, is_successor, include_threads)
  style_classes = style_classes(status, is_predecessor, is_successor, include_threads)
  mf_classes    = microformats_classes(status, is_direct_parent, is_direct_child)
  entry_classes = h_class + ' ' + mf_classes + ' ' + style_classes

- if status.reply? && include_threads
  = render partial: 'stream_entries/status', collection: @ancestors, as: :status, locals: { is_predecessor: true, direct_reply_id: status.in_reply_to_id }

.entry{ class: entry_classes }

  - if status.reblog?
    .pre-header
      .pre-header__icon
        = fa_icon('retweet fw')
      %span
        = link_to TagManager.instance.url_for(status.account), class: 'status__display-name muted' do
          %strong.emojify= display_name(status.account)
        = t('stream_entries.reblogged')
  - elsif pinned
    .pre-header
      .pre-header__icon
        = fa_icon('thumb-tack fw')
      %span
        = t('stream_entries.pinned')

  = render (centered ? 'stream_entries/detailed_status' : 'stream_entries/simple_status'), status: status.proper

- if include_threads
  = render partial: 'stream_entries/status', collection: @descendants, as: :status, locals: { is_successor: true, parent_id: status.id }
