.detailed-status.light
  = link_to TagManager.instance.url_for(status.account), class: 'detailed-status__display-name p-author h-card', target: stream_link_target, rel: 'noopener' do
    %div
      .avatar
        = image_tag status.account.avatar.url(:original), width: 48, height: 48, alt: '', class: 'u-photo'
    %span.display-name
      %strong.p-name.emojify= display_name(status.account)
      %span= acct(status.account)

  - if embedded_view?
    = link_to "web+mastodon://follow?uri=#{status.account.local_username_and_domain}", class: 'button button-secondary logo-button', target: '_new' do
      = render file: Rails.root.join('app', 'javascript', 'images', 'logo.svg')
      = t('accounts.follow')

  .status__content.p-name.emojify<
    - if status.spoiler_text?
      %p{ style: 'margin-bottom: 0' }<
        %span.p-summary> #{Formatter.instance.format_spoiler(status)}&nbsp;
        %a.status__content__spoiler-link{ href: '#' }= t('statuses.show_more')
    .e-content{ lang: status.language, style: "display: #{status.spoiler_text? ? 'none' : 'block'}; direction: #{rtl_status?(status) ? 'rtl' : 'ltr'}" }= Formatter.instance.format(status, custom_emojify: true)

  - if !status.media_attachments.empty?
    - if status.media_attachments.first.video?
      - video = status.media_attachments.first
      %div{ data: { component: 'Video', props: Oj.dump(src: video.file.url(:original), preview: video.file.url(:small), sensitive: status.sensitive?, width: 670, height: 380) }}
    - else
      %div{ data: { component: 'MediaGallery', props: Oj.dump(height: 380, sensitive: status.sensitive?, standalone: true, 'autoPlayGif': current_account&.user&.setting_auto_play_gif, media: status.media_attachments.map { |a| ActiveModelSerializers::SerializableResource.new(a, serializer: REST::MediaAttachmentSerializer).as_json }) }}
  - elsif status.preview_cards.first
    %div{ data: { component: 'Card', props: Oj.dump('maxDescription': 160, card: ActiveModelSerializers::SerializableResource.new(status.preview_cards.first, serializer: REST::PreviewCardSerializer).as_json) }}

  .detailed-status__meta
    %data.dt-published{ value: status.created_at.to_time.iso8601 }
    = link_to TagManager.instance.url_for(status), class: 'detailed-status__datetime u-url u-uid', target: stream_link_target, rel: 'noopener' do
      %time.formatted{ datetime: status.created_at.iso8601, title: l(status.created_at) }= l(status.created_at)
    路
    - if status.application
      - if status.application.website.blank?
        %strong.detailed-status__application= status.application.name
      - else
        = link_to status.application.name, status.application.website, class: 'detailed-status__application', target: '_blank', rel: 'noopener'
      路
    %span<
      = fa_icon('retweet')
      %span= status.reblogs_count
    路
    %span<
      = fa_icon('star')
      %span= status.favourites_count

    - if user_signed_in?
      路
      = link_to t('statuses.open_in_web'), web_url("statuses/#{status.id}"), class: 'open-in-web-link', target: '_blank'
