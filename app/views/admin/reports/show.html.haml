- content_for :header_tags do
  = javascript_pack_tag 'admin', integrity: true, async: true, crossorigin: 'anonymous'

- content_for :page_title do
  = t('admin.reports.report', id: @report.id)

.report-accounts
  .report-accounts__item
    %strong= t('admin.reports.reported_account')
    = render 'authorize_follows/card', account: @report.target_account, admin: true
    = render 'admin/accounts/card', account: @report.target_account
  .report-accounts__item
    %strong= t('admin.reports.reported_by')
    = render 'authorize_follows/card', account: @report.account, admin: true
    = render 'admin/accounts/card', account: @report.account

%p
  %strong= t('admin.reports.comment.label')
  \:
  = simple_format(@report.comment.presence || t('admin.reports.comment.none'))

- unless @report.statuses.empty?
  %hr/

  = form_for(@form, url: admin_report_reported_statuses_path(@report.id)) do |f|
    .batch-form-box
      .batch-checkbox-all
        = check_box_tag :batch_checkbox_all, nil, false
      = f.select :action, Form::StatusBatch::ACTION_TYPE.map{|action| [t("admin.statuses.batch.#{action}"), action]}
      = f.submit t('admin.statuses.execute'), data: { confirm: t('admin.reports.are_you_sure') }, class: 'button'
      .media-spoiler-toggle-buttons
        .media-spoiler-show-button.button= t('admin.statuses.media.show')
        .media-spoiler-hide-button.button= t('admin.statuses.media.hide')
    - @report.statuses.each do |status|
      .report-status{ data: { id: status.id } }
        .batch-checkbox
          = f.check_box :status_ids, { multiple: true, include_hidden: false }, status.id
        .activity-stream.activity-stream-headless
          .entry= render 'stream_entries/simple_status', status: status
        .report-status__actions
          - unless status.media_attachments.empty?
            = link_to admin_report_reported_status_path(@report, status, status: { sensitive: !status.sensitive }), method: :put, class: 'icon-button nsfw-button', title: t("admin.reports.nsfw.#{!status.sensitive}") do
              = fa_icon status.sensitive? ? 'eye' : 'eye-slash'
          = link_to admin_report_reported_status_path(@report, status), method: :delete, class: 'icon-button trash-button', title: t('admin.reports.delete'), data: { confirm: t('admin.reports.are_you_sure') }, remote: true do
            = fa_icon 'trash'

%hr/

- if !@report.action_taken?
  %div{ style: 'overflow: hidden' }
    %div{ style: 'float: right' }
      = link_to t('admin.reports.silence_account'), admin_report_path(@report, outcome: 'silence'), method: :put, class: 'button'
      = link_to t('admin.reports.suspend_account'), admin_report_path(@report, outcome: 'suspend'), method: :put, class: 'button'
    %div{ style: 'float: left' }
      = link_to t('admin.reports.mark_as_resolved'), admin_report_path(@report, outcome: 'resolve'), method: :put, class: 'button'
- elsif !@report.action_taken_by_account.nil?
  %p
    %strong #{t('admin.reports.action_taken_by')}:
    = @report.action_taken_by_account.acct
