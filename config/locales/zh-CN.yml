---
zh-CN:
  about:
    about_mastodon_html: Mastodon（长毛象）是一个<em>自由、开放源码</em>的社交网站。它是一个分布式的服务，避免你的通信被单一商业机构垄断操控。请你选择一家你信任的 Mastodon 实例，在上面创建帐号，然后你就可以和任一 Mastodon 实例上的用户互通，享受无缝的<em>社交</em>交流。
    about_this: 关于本实例
    closed_registrations: 这个实例目前不开放注册 _(:3」∠)_
    contact: 联络
    description_headline: 关于 %{domain}
    domain_count_after: 个其它实例
    domain_count_before: 现已接入
    other_instances: 其它实例
    source_code: 源码
    status_count_after: 条嘟文
    status_count_before: 他们共嘟出了
    user_count_after: 位用户
    user_count_before: 这里共注册有
  accounts:
    follow: 关注
    followers: 粉丝
    following: 关注
    nothing_here: 神马都没有！
    people_followed_by: 正关注
    people_who_follow: 粉丝
    posts: 嘟文
    remote_follow: 跨站关注
    unfollow: 取消关注
  admin:
    accounts:
      are_you_sure: 你确定吗？
      confirm: 确认
      confirmed: 已确认
      disable_two_factor_authentication: 两步认证无效
      display_name: 显示名称
      domain: 域名
      edit: 编辑
      email: 电邮地址
      feed_url: 订阅 URL
      followers: 关注者
      follows: 正在关注
      ip: IP地址
      location:
        all: 全部
        local: 本地
        remote: 远程
        title: 地点
      media_attachments: 媒体文件
      moderation:
        all: 全部
        silenced: 被静音的
        suspended: 被停权的
        title: 管理操作
      most_recent_activity: 最新活动
      most_recent_ip: 最新 IP 地址
      not_subscribed: 未订阅
      order:
        alphabetic: 按字母
        most_recent: 按时间
        title: 排序
      perform_full_suspension: 实行完全暂停
      profile_url: 个人文件 URL
      public: 公共
      push_subscription_expires: 推送订阅过期
      reset: 重置
      reset_password: 重置密码
      salmon_url: Salmon 反馈 URL
      search: 搜索
      show:
        created_reports: 这个帐户创建的报告
        report: 报告
        targeted_reports: 关于这个帐户的报告
      silence: 静音
      statuses: 嘟文
      title: 用户
      undo_silenced: 解除静音
      undo_suspension: 解除停权
      username: 用户名称
      web: 用户页面
    domain_blocks:
      add_new: 添加
      created_msg: 正处理域名阻隔
      destroyed_msg: 已撤销域名阻隔
      domain: 域名阻隔
      new:
        create: 添加域名阻隔
        hint: "「域名阻隔」不会隔绝该域名用户的嘟帐户入本站数据库，但会嘟文抵达后，自动套用特定的审批操作。"
        severity:
          desc_html: "「<strong>自动静音</strong>」令该域名用户的嘟文，设为只对关注者显示，没有关注的人会看不到。 「<strong>自动除名</strong>」会自动将该域名用户的嘟文、媒体文件、个人资料从本服务器实例删除。"
          silence: 自动静音
          suspend: 自动除名
        title: 添加域名阻隔
      reject_media: 拒绝媒体文件
      reject_media_hint: 删除本地缓存的媒体文件，再也不在未来下载这个站点的文件。和自动除名无关。
      severities:
        silence: 自动静音
        suspend: 自动除名
      severity: 阻隔程度
      show:
        affected_accounts:
          one: 数据库中有1个帐户受影响
          other: 数据库中有%{count}个帐户受影响
        retroactive:
          silence: 对此域名的所有帐户取消静音
          suspend: 对此域名的所有帐户取消除名
        title: 撤销 %{domain} 的域名阻隔
        undo: 撤销
      title: 域名阻隔
      undo: 撤销
    instances:
      account_count: 已知帐号
      domain_name: 域名
      title: 已知实例
    reports:
      are_you_sure: 你确定吗?
      comment:
        label: 备注
        none: 没有
      delete: 删除
      id: ID
      mark_as_resolved: 标示为「已处理」
      nsfw:
        'false': NSFW无效
        'true': NSFW有效
      report: '举报 #%{id}'
      reported_account: 举报用户
      reported_by: 举报者
      resolved: 已处理
      silence_account: 将用户静音
      status: 状态
      suspend_account: 将用户停权
      target: 对象
      title: 举报
      unresolved: 未处理
      view: 查看
    settings:
      contact_information:
        email: 输入一个公开的电邮地址
        username: 输入用户名称
      registrations:
        closed_message:
          desc_html: 当本站暂停接受注册时，会显示这个消息。<br/> 可使用 HTML
          title: 暂停注册消息
        open:
          title: 开放注册
      site_description:
        desc_html: 在首页显示，及在 meta 标签中用作网站介绍。<br>你可以在此使用 HTML 标签，尤其是<code>&lt;a&gt;</code> 和 <code>&lt;em&gt;</code>。
        title: 本站介绍
      site_description_extended:
        desc_html: 本站详细信息页的內容<br/>你可在此使用 HTML
        title: 本站详细信息
      site_title: 本站名称
      title: 网站设置
    subscriptions:
      callback_url: 回调 URL
      confirmed: 确定
      expires_in: 期限
      last_delivery: 数据最后送抵时间
      title: WebSub 订阅
      topic: 所订阅资源
    title: 管理
  application_mailer:
    settings: 更改电邮设置︰%{link}
    signature: 来自 %{instance} 的 Mastodon 通知
    view: 查看：
  applications:
    invalid_url: URL 无效
  auth:
    change_password: 登录凭据
    didnt_get_confirmation: 没有收到确认邮件？
    forgot_password: 忘记密码？
    login: 登录
    logout: 登出
    register: 注册
    resend_confirmation: 重发确认邮件
    reset_password: 重置密码
    set_new_password: 设置新密码
  authorize_follow:
    error: 对不起，寻找这个跨站用户时出错
    follow: 关注
    title: 关注 %{acct}
  datetime:
    distance_in_words:
      about_x_hours: "%{count} 小时"
      about_x_months: "%{count} 个月"
      about_x_years: "%{count} 年"
      almost_x_years: 接近 %{count} 年
      half_a_minute: 刚刚
      less_than_x_minutes: "%{count} 分不到"
      less_than_x_seconds: 刚刚
      over_x_years: 超过 %{count} 年
      x_days: "%{count} 天"
      x_minutes: "%{count} 分"
      x_months: "%{count} 个月"
      x_seconds: "%{count} 秒"
  errors:
    '403': 无权查看
    '404': 找不到页面
    '410': 内容已被删除
    '422':
      content: 无法确认登录信息。你是不是屏蔽了 Cookie？
      title: 无法确认登录信息
    '429': 被限制
  exports:
    blocks: 被你封锁的用户
    csv: CSV
    follows: 你所关注的用户
    mutes: 你所静音的用户
    storage: 媒体容量大小
  followers:
    domain: 域名
    explanation_html: 想要保护你的嘟文的话，请慎重考虑关注你的人。<strong>你的受保护的嘟文会发送到有你的关注者的所有实例上</strong>。你也许想要复查一下关注者列表来移除那些你无法信任的关注者。
    followers_count: 关注者数量
    lock_link: 保护你的帐户
    purge: 从关注者中移除
    success: 从 %{count} 个域名中移除了关注者。
    true_privacy_html: "<strong>真正的隐私只能靠端到端加密来实现</strong>！"
    unlocked_warning_html: 任何人都可以关注你然后查看被保护的嘟文， %{lock_link} 可以复核和拒绝关注请求。
    unlocked_warning_title: 你的帐户没被保护
  generic:
    changes_saved_msg: 更改已被保存。
    powered_by: 基于 %{link} 构建
    save_changes: 保存
    validation_errors:
      one: 出错啦！请确认以下出错的地方，修改之后再来一次：
      other: 出错啦！请确认以下 %{count} 处出错的地方，修改之后再来一次：
  imports:
    preface: 你可以在此导入你在其他服务器实例所导出的数据文件，包括︰你所关注、封锁的用户。
    success: 你已成功上载数据文件，我们正将数据导入，请稍候
    types:
      blocking: 封锁名单
      following: 关注名单
      muting: 静音名单
    upload: 上载
  landing_strip_html: "<strong>%{name}</strong> 是一个在 %{link_to_root_path} 的用户。只要你是象毛世界里（Mastodon、GNU social）任一服务器实例的用户，便可以跨站关注此站用户并与其沟通。"
  landing_strip_signup_html: 如果你没有这类帐户，欢迎在<a href="%{sign_up_path}">此处登记</a>。
  media_attachments:
    validations:
      images_and_video: 无法添加视频到一个已经包含图片的嘟文中
      too_many: 最多只能添加4张图片
  notification_mailer:
    digest:
      body: 自从你在%{since}使用%{instance}以后，错过了这些嘟嘟滴滴：
      mention: "%{name} 在此提及了你︰"
      new_followers_summary:
        one: 有人关注你了！耶！
        other: 有 %{count} 个人关注了你！别激动！
      subject:
        one: "你有一个新通知 \U0001F418"
        other: "%{count} 个通知太多，赶快去看看 \U0001F418"
    favourite:
      body: "%{name} 收藏了你"
      subject: "%{name} 给你点了收藏"
    follow:
      body: "%{name} 关注了你"
      subject: "%{name} 关注了你"
    follow_request:
      body: "%{name} 要求关注你"
      subject: 等候关注你的用户︰ %{name}
    mention:
      body: "%{name} 在文章中提及你︰"
      subject: "%{name} 在文章中提及你"
    reblog:
      body: 你的嘟文得到 %{name} 的转嘟
      subject: "%{name} 转嘟（嘟嘟滴）了你的嘟文"
  number:
    human:
      decimal_units:
        format: "%n%u"
        units:
          billion: B
          million: M
          quadrillion: Q
          thousand: K
          trillion: T
          unit: ''
  pagination:
    next: 下一页
    prev: 上一页
    truncate: "……"
  remote_follow:
    acct: 请输入你的︰用户名称@实例域名
    missing_resource: 无法找到您的帐户转接网址
    proceed: 下一步
    prompt: 你正准备关注︰
  settings:
    authorized_apps: 已授权的应用
    back: 回到 Mastodon
    edit_profile: 更改个人信息
    export: 导出
    followers: 授权的关注者
    import: 导入
    preferences: 首选项
    settings: 设置
    two_factor_authentication: 两步认证
  statuses:
    open_in_web: 打开网页
    over_character_limit: 超过了 %{max} 字的限制
    show_more: 显示更多
    visibilities:
      private: 限关注者
      private_long: 仅向关注者公开
      public: 公开
      public_long: 向所有人公开
      unlisted: 于公共时间线中隐藏
      unlisted_long: 公开，但不显示在公共时间线中
  stream_entries:
    click_to_show: 显示
    reblogged: 转嘟
    sensitive_content: 敏感内容
  time:
    formats:
      default: "%Y年%-m月%d日 %H:%M"
  two_factor_authentication:
    code_hint: 请输入你认证器产生的代码，以确认设置
    description_html: 当你启用<strong>两步认证</strong>后，你登录时将额外需要使用手机或其他认证器生成的代码。
    disable: 停用
    enable: 启用
    enabled_success: 已成功启用两步认证
    generate_recovery_codes: 生成恢复代码
    instructions_html: "<strong>请用你手机的认证器应用（如 Google Authenticator、Authy），扫描这里的 QR 二维码</strong>。在两步认证启用后，你登录时将需要使用此应用程序产生的认证码。"
    lost_recovery_codes: 如果你丢了手机，你可以用恢复代码重新访问你的帐户。如果你丢了恢复代码，也可以在这里重新生成一个，不过以前的恢复代码就失效了。<del>（废话）</del>
    manual_instructions: 如果你无法扫描 QR 二维码，请手动输入这个文本密码︰
    recovery_codes_regenerated: 已成功重新生成恢复代码
    recovery_instructions_html: 如果你的手机无法使用，你可以使用下面的任何恢复代码来恢复你的帐号。请保管好你的恢复代码以防泄漏（例如你可以打印好它们并和重要文档一起保存）。
    setup: 设置
    wrong_code: 你输入的认证码并不正确！可能服务器时间和你手机不一致，请检查你手机的时钟，或与本站管理员联系。
  users:
    invalid_email: 邮箱格式有误
    invalid_otp_token: 两步认证码有误
